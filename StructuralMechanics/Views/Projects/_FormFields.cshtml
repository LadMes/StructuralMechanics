@model ProjectViewModel

@{
    string displayStyle = "display: none;";
    if (Model != null && Model.StructureType == StructureType.ThinWalledStructure)
        displayStyle = "";
}

<div class="form-row">
    <div class="form-item">
        <label asp-for="ProjectName"></label>
        <input asp-for="ProjectName" />
        <span asp-validation-for="ProjectName" class="error-message"></span>
    </div>
    <div class="form-item">
        <label asp-for="StructureType"></label>
        @if (Model == null || Model.IsCreateView)
        {
            <select id="structureTypes" asp-for="StructureType" asp-items="Html.GetEnumSelectList<StructureType>()" 
                                                                onChange="structureTypeChanged(@((int)StructureType.ThinWalledStructure))">
                <option value="Please select structure type">Please select structure type</option>
            </select>
        }
        else
        {
            <input hidden asp-for="StructureType" value="@Model.StructureType" />
            <input readonly value="@StructuralMechanics.Utilities.EnumDisplayHelper.GetDisplayName(Model.StructureType)" />
        }
        <span asp-validation-for="StructureType" class="error-message"></span>
    </div>
</div>
<div id="thinWalledStructure" class="form-row" style="@displayStyle">
    <div class="form-item">
        <label asp-for="ThinWalledStructureType"></label>
        <select asp-for="ThinWalledStructureType" asp-items="Html.GetEnumSelectList<ThinWalledStructureType>()">
            <option value="Please select thin-walled type">Please select thin-walled type</option>
        </select>
        <span asp-validation-for="ThinWalledStructureType" class="error-message"></span>
    </div>
</div>